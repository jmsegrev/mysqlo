// Generated by CoffeeScript 1.6.3
(function() {
  module.exports = function(db) {
    var connections, model;
    connections = {};
    return model = {
      snippet: function(id, content) {
        if (this._snippets == null) {
          this._snippets = {};
        }
        return this._snippets[id] = content;
      },
      query: function(group) {
        if (group == null) {
          group = 'master';
        }
        if (!(group in connections)) {
          connections[group] = db.connect(group);
        }
        return (function(_this) {
          return function(sql, values, snippetId) {
            var _ref;
            if (snippetId != null) {
              sql = (_ref = _this._snippets) != null ? _ref[snippetId].concat(sql) : void 0;
            }
            return connections[group].bind(_this).then(function(connection) {
              return connection.query(sql, values).spread(function(rows, fields) {
                return rows;
              });
            });
          };
        })(this);
      },
      begin: function(group) {
        if (group == null) {
          group = 'master';
        }
        if (!(group in connections)) {
          connections[group] = db.connect(group);
        }
        return function(callback) {
          return connections[group].then(function(connection) {
            return connection.begin(group, callback)["finally"](function() {
              return connection.end();
            });
          });
        };
      },
      end: function(group) {
        var groupName;
        if ((group != null) && group in connections) {
          connections[group].then(function(connection) {
            return connection.end();
          });
          return delete connections[group];
        } else {
          for (groupName in connections) {
            connections[groupName].then(function(connection) {
              return connection.end();
            });
          }
          return connections = {};
        }
      },
      insert: function(table, values) {
        return this.query("INSERT INTO " + table + " SET ?", values);
      }
    };
  };

}).call(this);
